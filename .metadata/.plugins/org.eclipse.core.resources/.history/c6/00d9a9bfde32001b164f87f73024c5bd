<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Bouncing Ball Example</title>
<style>
canvas {
	border: 1px dotted red;
	background-color: #fcff00;
}
</style>
<script>
	function Field() {
		this.width = 500;
		this.height = 300;
		this.clearField = function(context) {
			context.clearRect(0, 0, this.width, this.height); /* 화면을 지운다. */
		}
	}
	function Cannon(xPos, yPos) {
		this.xPos = xPos;
		this.yPos = yPos;

		this.shootingSpeed = 0; /* 사용자가 입력한 공의 초기속도 */
		this.angleR = 0; /* 사용자가 입력한 공의 초기각도 */
		this.bullet;
		
		cannon.shoot(velocity, angleR);
		this.shoot = function(velocity, angleR) {
			this.shootingSpeed = velocity;
			this.angleR = angleR;
			this.bullet.setSpeed(this.shootingSpeed * Math.cos(angleR),-this.shootingSpeed * Math.sin(angleR));
		}
		
		this.loadBullet = function(bullet) {
			this.bullet = bullet;
		}
	}
	function Bullet(cannon) {

		this.xPos = cannon.xPos; /* 공의 현재 x방향 위치 */
		this.yPos = cannon.yPos; /* 공의 현재 y방향 위치 */
		this.xSpeed = 0; /* 공의 현재 x방향 속도 */
		this.ySpeed = 0; /* 공의 현재 y방향 속도 */
		this.radius = 10; /* 공의 반지름 */
		
		/* 공을 화면에 그린다. */
		this.draw = function(comtext) {
			this.beginPath();
			context.arc(this.xPos, this.yPos, this.radius, 0,2.0 * Math.PI, true);
			context.fillStyle = "red";
			context.fill();
		}
		this.setSpeed = function(speedX, speedY) {
			this.xSpeed = speedX;
			this.ySpeed = speedY;
			alert(this.xSpeed);
		}
	}
	
	function Target(xPos, yPos) {
		this.xPos = xPos;
		this.yPos = yPos;
		
		this.backimage = new Image();
		this.backimage.src = "../../resources/img/net.jpeg";
		
		/* 목표물을 화면에 그린다. */
		this.draw = function(context) {
			this.beginPath();
			context.rect(this.xPos, this.yPos, 40, 40);
			context.fillStyle = "black";
			context.fill();
		}
	}
	var field = new Field();
	var cannon = new Cannon(10, 10);
	var bullet = new Bullet(cannon); //cannon의 정보가 bullet에서 호출
	var target = new Target(400, 10);
	
	document.addEventListener("DOMContentLoaded", function() {
						var context; /* 컨텍스트 객체*/
						var score = 0; /* 점수 */
						var image = new Image(); /* 이미지 객체 생성 */
						image.src = "../../resources/img/lawn.jpeg"; /* 이미지 파일 이름 설정 */
						var timer; /* 타이머 객체 변수 */
						
						/* 배경을 화면에 그린다. */
						function drawBackground() {
							context.drawImage(image, 0, 270);
							context.drawImage(backimage, 450, 60);
						}
						
			canvas = document.getElementById('canvas');
			context = document.getContext('2d');
			canvas.setAttribute('width', field.width);
			canvas.setAttribute('height', field.height);
			field.clearField(context);
			bullet.draw(context);
			target.draw(context);
	});
	
	/* 사용자가 발사 버튼을 누르면 호출된다. */
	function start() {
		velocity = Number(document.getElementById("velocity").value);
		angle = Number(document.getElementById("angle").value);
		var angleR = angle * Math.PI / 180;
		
		cannon.loadBullet(bullet);
		cannon.shoot(velocity, angleR);

		timer = setInterval(calculate, 100);
	}
	/* 공의 현재 속도와 위치를 업데이트한다. */
	function calculate() {
		ySpeed = ySpeed + 1.98;

		xPos = xPos + xSpeed;
		yPos = yPos + ySpeed;

		/* 공이 목표물에 맞았으면 */
		if ((xPos >= 450) && (xPos <= 480)
				&& (yPos >= 60) && (yPos <= 210)) {
			score++;
			document.getElementById("score").innerHTML = "점수="
					+ score;
			clearInterval(timer);
		}
		/* 공이 경계를 벗어났으면 */
		if (yPos >= 300 || yPos < 0) {
			clearInterval(timer);
		}
		draw();
	}		
</script>
</head>
<body onload="init();">
	<canvas id="canvas"></canvas>
	<div id="control">
		속도 : <input id="velocity" value="30" type="number" min="0" max="100" step="1">
		각도 : <input id="angle" value="45" type="number" min="0" max="90" step="1">
		<div id="score">점수 = 0</div>
		<button onclick="start()">발사</button>
	</div>
</body>
</html>